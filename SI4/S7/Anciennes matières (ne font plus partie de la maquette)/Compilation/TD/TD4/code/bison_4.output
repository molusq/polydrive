Grammar

    0 $accept: g $end

    1 g: g expr '\n'
    2  | %empty

    3 expr: expr '+' expr
    4     | expr '-' expr
    5     | expr '*' expr
    6     | expr '/' expr
    7     | '(' expr ')'
    8     | NUMBER
    9     | '-' NUMBER


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'(' (40) 7
')' (41) 7
'*' (42) 5
'+' (43) 3
'-' (45) 4 9
'/' (47) 6
error (256)
NUMBER (258) 8 9


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
g (12)
    on left: 1 2, on right: 0 1
expr (13)
    on left: 3 4 5 6 7 8 9, on right: 1 3 4 5 6 7


State 0

    0 $accept: . g $end

    $default  reduce using rule 2 (g)

    g  go to state 1


State 1

    0 $accept: g . $end
    1 g: g . expr '\n'

    $end    shift, and go to state 2
    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 6


State 2

    0 $accept: g $end .

    $default  accept


State 3

    8 expr: NUMBER .

    $default  reduce using rule 8 (expr)


State 4

    9 expr: '-' . NUMBER

    NUMBER  shift, and go to state 7


State 5

    7 expr: '(' . expr ')'

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 8


State 6

    1 g: g expr . '\n'
    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr

    '+'   shift, and go to state 9
    '-'   shift, and go to state 10
    '*'   shift, and go to state 11
    '/'   shift, and go to state 12
    '\n'  shift, and go to state 13


State 7

    9 expr: '-' NUMBER .

    $default  reduce using rule 9 (expr)


State 8

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr
    7     | '(' expr . ')'

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    ')'  shift, and go to state 14


State 9

    3 expr: expr '+' . expr

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 15


State 10

    4 expr: expr '-' . expr

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 16


State 11

    5 expr: expr '*' . expr

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 17


State 12

    6 expr: expr '/' . expr

    NUMBER  shift, and go to state 3
    '-'     shift, and go to state 4
    '('     shift, and go to state 5

    expr  go to state 18


State 13

    1 g: g expr '\n' .

    $default  reduce using rule 1 (g)


State 14

    7 expr: '(' expr ')' .

    $default  reduce using rule 7 (expr)


State 15

    3 expr: expr . '+' expr
    3     | expr '+' expr .
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12

    $default  reduce using rule 3 (expr)


State 16

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    4     | expr '-' expr .
    5     | expr . '*' expr
    6     | expr . '/' expr

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12

    $default  reduce using rule 4 (expr)


State 17

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    5     | expr '*' expr .
    6     | expr . '/' expr

    '/'  shift, and go to state 12

    $default  reduce using rule 5 (expr)


State 18

    3 expr: expr . '+' expr
    4     | expr . '-' expr
    5     | expr . '*' expr
    6     | expr . '/' expr
    6     | expr '/' expr .

    $default  reduce using rule 6 (expr)
