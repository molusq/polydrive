OPT = -Wall -std=c99
monprog : A.o B.o C.o D.o
	gcc $(OPT) A.o B.o C.o D.o -o monprog
A.o : A.c A.h commun.h
	gcc $(OPT) -c A.c
B.o : B.c B.h A.h D.h commun.h
	gcc $(OPT) -c B.c
C.o : C.c C.h A.h D.h commun.h
	gcc $(OPT) -c C.c
D.o : D.c D.h commun.h
	gcc $(OPT) -c D.c

main:   main.o hello.o        gcc -o main main.o hello.omain.o: main.c hello.h        gcc -c main.chello.o: hello.c hello.h        gcc -c hello.c

int main() {	int c;	while ((c = getchar()) != EOF){
	putchar(c);	}	return 0;
}

OBJ    = main.o hello.oCC     = gccCFLAGS = -DDEBUG -gmain: $(OBJ)        $(CC) -o main $(OBJ)


int atoi(char s[]) {	int i, n, sign=1;	for (i=0; s[i]==’\t’ || s[i]==’\n’ || s[i]==’ ’; i++);	if (s[i] == ’+’ || s[i] == ’-’) sign = (s[i++] == ’+’) ? 1 : -1;  	for (n = 0; s[i]>=’0’ && s[i] <= ’9’; i++)    		n = 10*n + (s[i]-’0’);  	return sign * n;}


K&R:
type_résultat nom(parametres)
	types des paramètres{
	corps de la fonction}